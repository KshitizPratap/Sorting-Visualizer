{"version":3,"sources":["functions/merge.js","functions/qsort.js","functions/heap.js","controller/controller.js","sortingComponent/logo.png","sortingComponent/array.js","App.js","reportWebVitals.js","index.js"],"names":["merging","array","animation","length","mergeSort","auxArray","l","r","m","Math","floor","left","right","n1","n2","i","j","k","temp","a","b","push","height","p","merge","qsort","sorting","pivot","partition","heapsort","arr","n","maxheapify","buildheap","heap","large","t","controller","props","className","type","min","max","onChange","sizeChanger","speedChanger","colorChanger","Array","state","elementColor","hardReset","size","speed","sizechange","setState","createArray","speedChange","colorChange","random","reset","window","location","reload","mergeSortMain","anime","bars","document","getElementsByClassName","color","bar1","style","bar2","setTimeout","backgroundColor","qsortMain","count","heapMain","console","log","this","src","Logo","alt","event","target","value","onClick","map","index","width","Component","App","rel","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.af7d8af0.chunk.js","sourcesContent":["export const merging = (array) => {\n  const animation   = [];\n\n  if(array.length <= 1)  return array;\n  const auxArray = [...array];\n  \n  mergeSort(auxArray, 0, array.length - 1, animation);\n  return animation;\n}\n\nfunction mergeSort(auxArray, l, r, animation){\n   if(l < r){\n       const m = Math.floor(l + (r-l) / 2);\n       mergeSort(auxArray, l, m, animation);\n       mergeSort(auxArray, m+1, r, animation);\n       merge(auxArray, l, m, r, animation)\n   }\n}\n\nfunction merge(auxArray, l, m, r, animation){\n   let left = [], right = [];\n   let n1 = m-l+1, n2 = r-m;\n\n   for(let i=0; i<n1; i++){\n       left[i] = auxArray[l+i];\n   }\n   for(let i=0; i<n2; i++){\n       right[i] = auxArray[m+1+i];\n   }\n\n   let i=0, j=0, k=l;\n   while(i<n1 && j<n2){\n       let a = l+i, b = m+1+j;\n       let temp = {a, b};\n       animation.push(temp);\n       animation.push(temp)\n\n       if(left[i] <= right[j]){\n           auxArray[k] = left[i]\n           const p = left[i]\n           const height = {k, p}\n           animation.push(height)\n           i++;\n       }\n       else{\n           auxArray[k] = right[j]\n           const p = right[j]\n           const height = {k, p}\n           animation.push(height)\n           j++\n       }\n       k++\n   }\n   while(i<n1){\n       let a = l+i;\n       const b = -2;\n       let temp = {a, b}\n       animation.push(temp)\n       animation.push(temp)\n\n       const p = left[i]\n       const height = {k, p}\n       animation.push(height)\n\n       auxArray[k++] = left[i++]\n   }\n   while(j<n2){\n       let a = m+1+j\n       const b = -1;\n       let temp = {a, b}\n\n       animation.push(temp)\n       animation.push(temp)\n\n       const p = right[j]\n       const height = {k, p}\n       animation.push(height)\n\n       auxArray[k++] = right[j++]\n   }\n}","export function qsort(array){\n    const animation = []\n    const temp = [...array]\n\n    sorting(temp, 0, array.length-1, animation)\n    return animation\n}\n\nfunction sorting(array, l, r, animation) {\n    if(l < r){\n        let p = partition(array, l, r, animation)\n        sorting(array, l, p, animation)\n        sorting(array, p+1, r, animation)\n    }\n}\n\nfunction partition(array, l, r, animation){\n    let pivot = array[l];\n    let i = l-1, j = r+1;\n\n    while(true){\n        do{\n            i++;\n            animation.push([i,l])\n            animation.push([i,l])\n\n        }while(array[i] < pivot);\n        do{\n            j--;\n\n            animation.push([j,l])\n            animation.push([j,l])\n\n        }while(array[j] > pivot);\n\n        if(i >= j){\n            return j;\n        }\n\n        animation.push([i, j, array[i], array[j]])\n        let a = array[i]\n        array[i] = array[j]\n        array[j] = a\n    }\n}","export function heapsort(array){\n    const animation = []\n    const temp = [...array]\n\n    heap(temp, array.length, animation)\n    return animation\n}\nfunction heap(arr, n, animation){\n    buildheap(arr, n, animation);\n    for(let i=n-1; i>=1; i--){\n        animation.push([0, i])\n        animation.push([0, i])\n        animation.push([0, i, arr[0], arr[i]])\n\n        let temp = arr[i];\n        arr[i] = arr[0]\n        arr[0] = temp;\n\n        maxheapify(arr, i, 0, animation)\n    }\n}\nfunction buildheap(arr, n, animation){\n    for(let i=(n-2)/2; i>=0; i--){\n        maxheapify(arr, n, i, animation)\n    }\n}\nfunction maxheapify(arr, n, i, animation){\n    let large = i, left = 2*i+1, right = 2*i+2;\n    if(left < n && arr[left] > arr[large]){\n        const temp = [large, left]\n        large = left;\n        animation.push(temp);\n        animation.push(temp);\n    }\n    if(right < n && arr[right] > arr[large]){\n        const temp = [large, right]\n        large = right;\n        animation.push(temp);\n        animation.push(temp);\n    }\n\n    if(large !== i){\n        const temp = [i, large, arr[i], arr[large]]\n        animation.push(temp)\n        const t = arr[large]\n        arr[large] = arr[i]\n        arr[i] = t;\n        maxheapify(arr, n, large, animation)\n    }\n}","import React from 'react';\nimport './controller.css';\n\nconst controller = (props) => {\n    return(\n    <div className=\"containerControl\">\n        <div className = \"temp\">\n            <label className=\"Clabel\">Size</label>\n            <input type=\"range\" \n                    min=\"50\" max=\"220\" \n                    onChange = {props.sizeChanger}/>\n        </div>\n\n        <div className = \"temp\">\n            <label className=\"Clabel\">Speed</label>\n            <input type=\"range\"\n                min=\"2\" max=\"20\" \n                onChange = {props.speedChanger}/>\n        </div>\n\n        <div className = \"temp\">\n            <label className=\"Clabel\">Color</label>\n            <input type=\"color\"\n                onChange = {props.colorChanger}/>\n        </div>\n    </div>\n    );\n}\n\nexport default controller;","export default __webpack_public_path__ + \"static/media/logo.269bfc74.png\";","import React, {Component} from 'react';\nimport { merging } from '../functions/merge'\nimport {qsort} from '../functions/qsort.js';\nimport {heapsort} from '../functions/heap.js';\nimport Controls from '../controller/controller'\nimport './array.css';\nimport Logo from './logo.png'\n\nclass Array extends Component {\n    state = {\n        arr : [],\n        elementColor : ['#66FF66'],\n        hardReset : false,\n        size : 90,\n        speed : 20\n    }\n\n    sizechange =(t) => {\n      this.setState({size : t});\n      this.createArray(t)\n    }\n\n    speedChange = (t) => {\n      this.setState({speed : t});\n    }\n\n    colorChange = (t) => {\n      this.setState({elementColor : t})\n    }\n\n    createArray = (size) => {\n        const array = [];\n        \n        for(let i=0; i<=size;i++)\n        {\n          if(i === 45){\n            continue;\n          }\n          array.push(Math.floor(Math.random()*400));\n        }\n        array[45] = 400;\n        array[5] = 400;\n        this.setState({arr : array});\n    }\n\n    reset = () => {\n      window.location.reload(false);\n    }\n\n    mergeSortMain = (array) =>{\n      let anime = merging(array)\n\n      for(let i=0; i<anime.length; i++){\n        let bars = document.getElementsByClassName('arrayElement');\n        let colorChange = i%3 !== 2;\n  \n        if(colorChange){\n          let color = i%3 === 0 ? 'red' : this.state.elementColor;\n          let {a, b} = anime[i];\n          if(b < 0){\n            b = a;\n          }\n          let bar1 = bars[a].style;\n          let bar2 = bars[b].style;\n          setTimeout(() => {\n            bar1.backgroundColor = color;\n            bar2.backgroundColor = color;\n          }, i*(100/this.state.speed))\n        }\n        else{\n          let {k, p} = anime[i];\n  \n          setTimeout(() => {\n            const elementHeight = bars[k].style;\n            elementHeight.height = `${p}px`;\n          }, i*(100/this.state.speed)); \n          }\n        }\n      }\n\n    qsortMain = (array) => {\n      const anime = qsort(array)\n\n      let count = 0;\n      for(let i=0; i<anime.length; i++){\n\n        let bars = document.getElementsByClassName('arrayElement');\n        let color = count%2 === 0 ? 'red' : this.state.elementColor;\n        let [a, b] = anime[i]\n        let bar1 = bars[a].style;\n        let bar2 = bars[b].style;\n\n        if(anime[i].length === 2){\n          count++;\n          setTimeout(() => {\n            bar1.backgroundColor = color;\n            bar2.backgroundColor = color;\n          }, i*(100/this.state.speed))\n        }\n        else if(anime[i].length === 4){\n          setTimeout(() => {\n            bar1.height = `${anime[i][3]}px`\n            bar2.height = `${anime[i][2]}px`\n          }, i*(100/this.state.speed));\n        }\n      }\n    }\n    \n    heapMain = (array) => {\n      const anime = heapsort(array)\n      console.log(anime)\n      let count = 0;\n      for(let i=0; i<anime.length; i++){\n        let bars = document.getElementsByClassName('arrayElement');\n          let color = count%2 === 0 ? 'red' : this.state.elementColor;\n          let [a, b] = anime[i]\n          let bar1 = bars[a].style;\n          let bar2 = bars[b].style;\n  \n          if(anime[i].length === 2){\n            count++;\n            setTimeout(() => {\n              bar1.backgroundColor = color;\n              bar2.backgroundColor = color;\n            }, i*(100/this.state.speed))\n          }\n          else if(anime[i].length === 4){\n            setTimeout(() => {\n              bar1.height = `${anime[i][3]}px`\n              bar2.height = `${anime[i][2]}px`\n            }, i*(100/this.state.speed));\n          }\n      }\n    }\n\n    componentDidMount(){\n        this.createArray(90);\n      console.log(\"[componentDidMount]\")\n    }\n    render(){\n        return(\n          \n          <div className=\"MainContainer\">\n            {/* ------ Heading of page------ */}\n            <div className=\"nav\">\n              <img className = \"logo\" src = {Logo} alt = \"logo\"/>\n              <label className = \"mainHeading\">Sorting Visualizer</label>\n            </div> \n\n            {/* ------ CONTROLS & SORTING BUTTONS------ */}          \n\n            <div className = \"buttons\">\n\n              {/* ------ Controls------ */}\n              <Controls  \n                    sizeChanger = {(event) => {this.sizechange(event.target.value)}}\n                    colorChanger = {(event) => {this.colorChange(event.target.value)}}\n                    speedChanger = {(event) => {this.speedChange(event.target.value)}}/>\n            \n              {/* ------ Sorting Buttons------ */}\n              <div className = \"buttonContainer\">\n                <button className = \"sortButton\" onClick = {() => this.mergeSortMain(this.state.arr)}>Merge Sort</button>\n                <button className = \"sortButton\" onClick = {() => this.qsortMain(this.state.arr)}>Quick Sort</button>\n                <button className = \"sortButton\" onClick = {() => this.heapMain(this.state.arr)}>Heap Sort</button>\n              </div>\n            </div>\n\n            {/* ------ Create Array Button------ */}\n            <div className = \"arrayButton\">\n              <button className = \"sortButton\" \n                    onClick = {() => {this.createArray(this.state.size)}}>Create Array</button>\n              <button className = \"sortButton\"  \n                  onClick = {() => {this.reset()}}>Reset Array</button>\n            </div>\n\n            \n            {/* ------ Array Container------ */}\n            <div className = \"container\">\n              {this.state.arr.map((value, index) => (\n              <div className=\"arrayElement\" \n                  key = {index} \n                      style = {{width : `${(1110 / this.state.arr.length) - 4}px`, \n                                height : `${value}px`, \n                                backgroundColor : `${this.state.elementColor}`}}>   \n              </div> ))}\n            </div>\n            \n          </div>\n        );\n    }\n};\n\nexport default Array;\n\n","import React, {Component} from 'react';\nimport './App.css';\nimport CreateArray from './sortingComponent/array';\n\nclass App extends Component {\n  render(){ \n    return (\n      <div>\n        <link rel=\"shortcut icon\" type=\"image/png\"  href=\"image/favicon.png\"></link>\n      <CreateArray/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}